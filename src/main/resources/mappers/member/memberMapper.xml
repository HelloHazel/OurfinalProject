<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="member">
	<select id="login_check" resultType="String" parameterType="com.example.finalproject.model.member.dto.MemberDTO">
		select name from member
		where userid=#{userid} and passwd=#{passwd}
	</select>
	
	<select id="viewMember" resultType="com.example.finalproject.model.member.dto.MemberDTO">
		select * from member
		where userid=#{userid}
	</select>
	
	<select id="findId" resultType="String">
	 select userid from member
	 where name=#{name} and email=#{email}
	</select>
	
	<select id="findPw" resultType="String">
		select passwd from member
		where name=#{name} and userid=#{userid} and email=#{email}
	</select>
	
	<insert id="insertMember">
	insert into member (name, userid, passwd, email, phone, zipcode, address1, address2)
	values (#{name}, #{userid}, #{passwd}, #{email}, #{phone}, #{zipcode}, #{address1}, #{address2})
	</insert>
	
	<select id="idCheck"  resultType="int">
		select count(*)
		from member
		where userid=#{userid}
	</select>
	
	<select id="emailCheck"  resultType="int">
		select count(*)
		from member
		where email=#{email}
	</select>

	  <!-- 수정용 비밀번호 체크 -->
	 <select id="checkPw" resultType="int">
	  select count(*) from member
	  where userid=#{userid} and passwd=#{passwd}
	 </select>

	
	 <update id="updateMember">
	  update member
	  set passwd=#{passwd}, name=#{name}, phone=#{phone}, email=#{email}, zipcode=#{zipcode}, 
	  address1=#{address1}, address2=#{address2}
	  where userid=#{userid}
	 </update>
	 
	  <delete id="deleteMember">
	   delete from member
	   where userid=#{userid}
	  </delete>
	 
	 <insert id="insertKakaoMember">
	insert into member (name, userid, passwd, email)
	values (#{name}, #{userid}, #{passwd}, #{email})
	</insert>
	
	<select id="addressInfo"  resultType="com.example.finalproject.model.member.dto.MemberDTO">
	select name, zipcode, address1, address2, phone
	from member
	where userid=#{userid}
	</select>
	
	<select id="list" resultType="com.example.finalproject.model.member.dto.MemberDTO">
	select
	userid, passwd, name, phone, email, zipcode, address1, join_date
	from member
	order by userid
	</select>
</mapper>

